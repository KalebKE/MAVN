/*
MAVNNetworkRenderer -- an interface within the Machine Artificial Vision
Networkm (Machine Artificial Vision Network).
Copyright (C) 2012, Kaleb Kircher.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package mavn.network.view;

import javax.swing.ScrollPaneConstants;

/**
 * MAVN Network Renderer is a special JPanel that contains the graphical
 * representation of the MAVN Network provided by the JUNG Graphical Network
 * library. 
 * @author Kaleb
 */
public class MavnNetworkRenderer extends javax.swing.JPanel implements JUNGPanelAdapterInterface
{

    private JUNGPanelAdapter networkView;
    private double[][] w2 = new double[0][0];
    private double[][] w1 = new double[0][0];
    private double[][] w0 = new double[0][0];

    /** Creates new form SimulynDefaultNetworkRenderer */
    public MavnNetworkRenderer()
    {
        initComponents();
        networkView = new JUNGPanelAdapter(w2, w1, w0);
        networkPane.setViewportView(networkView);
        networkPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
    }

    @Override
    public void fireNodes(double[] result)
    {
        networkView.fireNodes(result);
    }

    @Override
    public void setNetwork(double[][] w2, double[][] w1, double[][] w0)
    {
        networkView = new JUNGPanelAdapter(w2, w1, w0);
        networkPane.setViewportView(networkView);
        networkPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        networkPane = new javax.swing.JScrollPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(networkPane, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(networkPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane networkPane;
    // End of variables declaration//GEN-END:variables
}
