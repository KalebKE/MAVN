/*
MavnView -- a class within the Machine Artificial Vision Network(Machine Artificial Vision Network).
Copyright (C) 2012, Kaleb Kircher, Dennis Steele.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package mavn.view;

import java.awt.Frame;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.ScrollPaneConstants;
import mavn.simModel.output.view.state.OutputViewStateInterface;

/**
 * The main View for the Mavn application.
 * @author Kaleb
 */
public class SimControlView extends JFrame
{

    private ActionListener action;
    private JPanel outputView;
    private JPanel inputView;
    private OutputViewStateInterface outputViewState;

    /** Creates new form Main */
    public SimControlView(ActionListener action, JPanel inputView, JPanel outputView, OutputViewStateInterface outputViewState)
    {
        initComponents();

        this.action = action;
        this.outputViewState = outputViewState;

        importModelMenuItem.setActionCommand("importSimulationAction");
        importModelMenuItem.addActionListener(action);

        this.inputView = inputView;
        this.outputView = outputView;
        this.inputView.setVisible(true);
        this.outputView.setVisible(true);

        this.setVisible(true);
        this.pack();
        this.setExtendedState(Frame.MAXIMIZED_BOTH);

        mainScrollPane.setViewportView(this.inputView);
        mainScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
        mainScrollPane.validate();
        mainScrollPane.updateUI();

    }

    public void setInputView()
    {
        mainScrollPane.setViewportView(inputView);
        this.outputViewState.onInputView();
    }

    public void setOutputView()
    {
        mainScrollPane.setViewportView(outputView);
        this.outputViewState.onOutputView();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainScrollPane = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        importModelMenuItem = new javax.swing.JMenuItem();
        saveModelMenuItem = new javax.swing.JMenuItem();
        viewNetworkMenu = new javax.swing.JMenu();
        viewOutputMenuItem = new javax.swing.JMenuItem();
        viewInputsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        mainScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        mainScrollPane.setMaximumSize(new java.awt.Dimension(1200, 1000));
        mainScrollPane.setPreferredSize(new java.awt.Dimension(1050, 1002));

        fileMenu.setText("File");

        importModelMenuItem.setText("Import Model");
        fileMenu.add(importModelMenuItem);

        saveModelMenuItem.setText("Save Model");
        fileMenu.add(saveModelMenuItem);

        jMenuBar1.add(fileMenu);

        viewNetworkMenu.setText("Views");

        viewOutputMenuItem.setText("Model Outputs");
        viewOutputMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOutputMenuItemActionPerformed(evt);
            }
        });
        viewNetworkMenu.add(viewOutputMenuItem);

        viewInputsMenuItem.setText("Model Inputs");
        viewInputsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInputsMenuItemActionPerformed(evt);
            }
        });
        viewNetworkMenu.add(viewInputsMenuItem);

        jMenuBar1.add(viewNetworkMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1085, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_formPropertyChange
    {//GEN-HEADEREND:event_formPropertyChange
    }//GEN-LAST:event_formPropertyChange

    private void viewOutputMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_viewOutputMenuItemActionPerformed
    {//GEN-HEADEREND:event_viewOutputMenuItemActionPerformed
        this.setOutputView();

        mainScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
        mainScrollPane.validate();
        mainScrollPane.updateUI();
    }//GEN-LAST:event_viewOutputMenuItemActionPerformed

    private void viewInputsMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_viewInputsMenuItemActionPerformed
    {//GEN-HEADEREND:event_viewInputsMenuItemActionPerformed
        this.setInputView();

        mainScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
        mainScrollPane.validate();
        mainScrollPane.updateUI();
    }//GEN-LAST:event_viewInputsMenuItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem importModelMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JMenuItem saveModelMenuItem;
    private javax.swing.JMenuItem viewInputsMenuItem;
    private javax.swing.JMenu viewNetworkMenu;
    private javax.swing.JMenuItem viewOutputMenuItem;
    // End of variables declaration//GEN-END:variables
}
